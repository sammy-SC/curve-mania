
<html>
<head>
  <title>Example minimum receiver</title>
  <script src="//www.gstatic.com/cast/sdk/libs/receiver/2.0.0/cast_receiver.js"></script>
  <style>
  	.app {
  		position: absolute;
  		top: 0;
  		left: 0;
  		right: 0;
  		bottom: 0;
  		width: 100%;
  		height: 100%;
  		background: black;
  		color: white;
  	}
  		.app > .container {
  			 margin: auto;
			 position: absolute;
			 top: 0;
			 left: 0;
			 bottom: 0;
			 right: 0;
			 background: green;
			 width: 600px;
			 height: 300px;
  		}
  			.app > .container > h1 {
  				text-transform: uppercase;
  				text-align: center;
  				line-height: 300px;
  				font-size: 3em;
  				margin: 0;
  				padding: 0;
  			}
  </style>
</head>
<body>
	<div class="app">
		<div class="container">
            <canvas id="myCanvas" width="480" height="320"></canvas>
		</div>
	</div>
<script src='helpers.js'></script>
<script src='game.js'></script>
<!-- <script src='player.js'></script> -->

<script>
'use strict';
class Player {
    constructor(x, y, color, name) {
        this.x = x
        this.y = y
        this.color = color
        this.name = name
        this.width = SNAKE_WIDTH
        this.speed = MOVEMENT_SPEED
        this.steeringSpeed = STEERING_SPEED
        this.left = false
        this.right = false
        this.dead = false
        this.jumping = false

        const randomAngle = getRandom(0, Math.PI * 2)
        this.heading = randomAngle
    }

    updateHeading() {
        if (this.left) {
            this.heading -= this.steeringSpeed % Math.PI * 2
        } else if (this.right) {
            this.heading += this.steeringSpeed % Math.PI * 2
        }
    }

    updatePosition() {
        const heading = {
            x: this.x + this.speed * Math.cos(this.heading),
            y: this.y + this.speed * Math.sin(this.heading)
        }
        this.x = heading.x
        this.y = heading.y
    }

    checkForColision() {
        const threshold = 2.3
        const heading = {
            x: this.x + (this.width + threshold) * Math.cos(this.heading),
            y: this.y + (this.width + threshold) * Math.sin(this.heading)
        }

        if (heading.x < 0 || heading.x > canvas.width) {
            this.dead = true
            return
        } else if (heading.y < 0 || heading.y > canvas.height) {
            this.dead = true
            return
        }

        const p = ctx.getImageData(heading.x, heading.y, 1, 1).data
        const filteredArray = p.filter((value) => {
            return value !== 0
        })
        this.dead = filteredArray.length !== 0
    }

    draw() {
        if (this.dead) { return }

        if (this.jumping) {
            clearCircle(this.x, this.y, this.width)
        }
        if (this.jumping === false && Math.random() < JUMP_PROBABILITY) {
            this.jumping = true
            setTimeout(() => {
                this.jumping = false
            }, getRandomInt(JUMPING_BOTTOM_LIMIT, JUMPING_TOP_LIMIT))
        }


        this.updateHeading()
        this.updatePosition()
        this.checkForColision()

        ctx.beginPath()
        ctx.arc(this.x, this.y, this.width, 0, Math.PI * 2)
        ctx.fillStyle = this.color
        ctx.fill()
        ctx.closePath()
    }
}

const canvas = document.getElementById("myCanvas")
const ctx = canvas.getContext("2d")

// ctx.strokeText("Hello world", 50, 100);


const GAME_SPEED = 5

//snake shit
const COLORS = ["red", "black", "orange", "blue"]
const SNAKE_WIDTH = 3
const MOVEMENT_SPEED = 0.5
const STEERING_SPEED = 0.01
const JUMP_PROBABILITY = 0.001
const JUMPING_BOTTOM_LIMIT = 100
const JUMPING_TOP_LIMIT = 300

//keyboard
const LEFT_KEY_CODE = 37
const RIGHT_KEY_CODE = 39

var player1 = new Player(getRandom(0, canvas.width), getRandom(0, canvas.height), getRandomColor(), 'Sammy')

function keyDownHandler (e) {
    if(e.keyCode == RIGHT_KEY_CODE) {
        player1.right = true
    } else if(e.keyCode == LEFT_KEY_CODE) {
        player1.left = true
    }
}

function keyUpHandler(e) {
    if(e.keyCode == RIGHT_KEY_CODE) {
        player1.right = false
    } else if(e.keyCode == LEFT_KEY_CODE) {
        player1.left = false
    }
}

document.addEventListener("keydown", keyDownHandler, false)
document.addEventListener("keyup", keyUpHandler, false)

function draw() {
    player1.draw()
}

setInterval(draw, GAME_SPEED)

</script>
</body>
</html>
